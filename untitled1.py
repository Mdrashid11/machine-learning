# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oO_mFos6t9vfZp1eYjHhF9Mqu4JXOu6L
"""

import warnings
warnings.filterwarnings("ignore")

# Import libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Import dataset
re=pd.read_csv("realest.csv")

re.head()

re.info()

re.describe()

pd.isnull(re).sum()
# checking null value

re.dropna(inplace=True)
# droping null values


pd.isnull(re).sum()

re.dtypes

# Pairplot
sns.pairplot(re,x_vars=['Bedroom','Space','Room'],y_vars=['Price'],size=4,aspect=1,kind='scatter')
# Pairplot is usually used to plot when we want to know correlation in terms of positive, negative or no-correlation
# target variable is Price(y), we are comparing price with bedroom, space and room to see who is more correlated(positively correlated)
# aspect = ratio
# Space = positive corelation

# Heatmap
sns.heatmap(re.corr(),annot=True)
plt.show()
# heatmap plots co-relation with numbers and colors
# heatmap- light color for negative corr and dark for +ve corr
# Space is more correlated with Credit amount , so its our indepedant var

x=re['Space'].values
y=re['Price'].values


X=x.reshape(-1,1)
X

#Train_test_splitÂ¶
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,train_size=0.7,test_size=0.3,random_state=100)

X_train.shape

(89, 1)

y_test.shape

#Building a linear model
from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(X_train,y_train)

ypred=lr.predict(X_test)
ypred

#Calculating r2
from sklearn.metrics import r2_score
r_squared=r2_score(y_test,ypred)
r_squared

#Visualizing the fit on test data
plt.scatter(re['Space'],re['Price'],color='Black')
plt.plot(X_test,ypred,color='Brown')
plt.show()

from sklearn.metrics import r2_score
r_squared = r2_score(y_test, ypred)
r_squared